#!/bin/bash

batch=$(($1+1 + ($2-1)*10))
bs=100


# for letter. location shift is smaller than in our first paper, to oompare with Guo et al
#for distr in normal; do
for distr in lognormal normal gamma logistic; do
for label in pow size; do # size pow
for rho in  0 0.5 0.8; do # 0 0.5 0.8 0.9 0.95
  
  # for power
  if [ $label = "pow" ]; then 
  if [ $distr = "logistic" ]; then
    param=".6,$rho,1"
  else if [ $distr = "normal" ]; then
    param=".3,$rho,1"
  else if [ $distr = "lognormal" ]; then
    param=".3,$rho,1"
  else if [ $distr = "gamma" ]; then
    param="0.36,3,3,1,1,$rho"
  fi
  fi
  fi
  fi
  fi
  
  # for size
  if [ $label = "size" ]; then 
  if [ $distr = "logistic" ]; then
    param="0,$rho,1"
  else if [ $distr = "normal" ]; then
    param="0,$rho,1"
  else if [ $distr = "lognormal" ]; then
    param="0,$rho,1"
  else if [ $distr = "gamma" ]; then
    param="0,3,3,1,1,$rho"
  fi
  fi
  fi
  fi
  fi
  
  R -q --vanilla --args $bs $batch 20  10  0   $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  40  0   $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  
: <<'QWERTY'
  R -q --vanilla --args $bs $batch 20  10  5   $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  40  5   $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  10 10   $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err

  R -q --vanilla --args $bs $batch 20  40 40   $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  72 8    $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  80 0    $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err

  R -q --vanilla --args $bs $batch 20  20 20   $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  36 4    $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  40 0    $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err

  R -q --vanilla --args $bs $batch 20  18 2    $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  20 0    $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  10 10   $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err

  R -q --vanilla --args $bs $batch 20  5  5    $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  9  1    $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  10 0    $distr   $param   $label <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
QWERTY
done
done
done



: <<'QWERTY'
# size 
for distr in normal lognormal logistic gamma; do
for n in 10 20 50; do
for rho in 0 0.5 0.8 ; do
  if [ $distr = "logistic" ]; then
    param="0,$rho,1"
  else if [ $distr = "normal" ]; then
    param="0,$rho,1"
  else if [ $distr = "lognormal" ]; then
    param="0,$rho,1"
  else if [ $distr = "gamma" ]; then
    param="0,3,3,1,1,$rho"
  fi
  fi
  fi
  fi

#  R -q --vanilla --args $bs $batch $n 0   $(($n*2))   $distr   $param  asym <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch $n $(($n/10)) $n   $distr   $param  asym <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch $n $(($n/4))  $n   $distr   $param  asym <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch $n $(($n/2))  $n   $distr   $param  asym <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch $n $n         $n   $distr   $param  asym <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch $n $n         $n   $distr   $param  asym <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch $n $(($n/20)) $(($n/20))   $distr   $param  asym <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
done
done
done
QWERTY

: <<'QWERTY'
# power 
#for distr in lognormal normal gamma logistic; do
for distr in normal; do
for rho in 0 0.5 0.8 ; do

  # m=50
  if [ $distr = "logistic" ]; then
    param=".5,$rho,1"
  else if [ $distr = "normal" ]; then
    param=".3,$rho,1"
  else if [ $distr = "lognormal" ]; then
    param=".3,$rho,1"
  else if [ $distr = "gamma" ]; then
      param="0.4,3,3,1,1,$rho"
  fi
  fi
  fi
  fi
#  R -q --vanilla --args $bs $batch 50 0 100  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 50  5 50  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 50 12 50  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 50 25 50  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 50 50 50  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 50  2  2  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 50  5  5  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 50  10  10  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 50  25  25  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err

  # m=20
  if [ $distr = "logistic" ]; then
    param="1,$rho,1"
  else if [ $distr = "normal" ]; then
    param=".5,$rho,1"
  else if [ $distr = "lognormal" ]; then
    param=".5,$rho,1"
  else if [ $distr = "gamma" ]; then
    param="0.6,3,3,1,1,$rho"
  fi
  fi
  fi
  fi
#  R -q --vanilla --args $bs $batch 20 0  40  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 20  2 20  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 20  5 20  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
 # R -q --vanilla --args $bs $batch 20 10 20  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
 # R -q --vanilla --args $bs $batch 20 20 20  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 20  1  1  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
#  R -q --vanilla --args $bs $batch 20  2  2  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  4  4  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
  R -q --vanilla --args $bs $batch 20  10  10  $distr   $param   pow <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
done
done
QWERTY

: <<'QWERTY'
# variance estimators
for n in 10 20 30 50; do
for s in  .33  1  3 ; do
for rho in 0 0.5 0.8 ; do
for method in var ; do
  R -q --vanilla --args $bs $batch $n 0 $n  normal   0,$rho,$s   $method <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
done
done
done
done
QWERTY


: <<'QWERTY'
#misc
for n in 10; do
for s in  4; do
for method in var perm; do
  R -q --vanilla --args $bs $batch $(($n*2)) 0 $n normal   4,0,$s   $method <partially_matched_test_MC.R >logs/5050$batch.out 2>logs/5050$batch.err
done
done
done
QWERTY


